From 06812918c48af5e413a6ea6e2bf4cdc35b1f616d Mon Sep 17 00:00:00 2001
From: Andrii Badieiev <andrey64freemail@gmail.com>
Date: Sun, 15 Mar 2020 18:52:49 +0200
Subject: [PATCH] AddNewCar fixed

---
 CarRental/CarRental.csproj                    |   7 +
 CarRental/Controllers/HomeController.cs       |   4 +-
 ...02003151556059_AddBrandIdCarId.Designer.cs |  29 ++++
 .../202003151556059_AddBrandIdCarId.cs        |  40 ++++++
 .../202003151556059_AddBrandIdCarId.resx      | 126 ++++++++++++++++++
 CarRental/Models/Car.cs                       |   2 +
 CarRental/Views/Home/Index.cshtml             | 101 +++++++-------
 7 files changed, 258 insertions(+), 51 deletions(-)
 create mode 100644 CarRental/Migrations/202003151556059_AddBrandIdCarId.Designer.cs
 create mode 100644 CarRental/Migrations/202003151556059_AddBrandIdCarId.cs
 create mode 100644 CarRental/Migrations/202003151556059_AddBrandIdCarId.resx

diff --git a/CarRental/CarRental.csproj b/CarRental/CarRental.csproj
index 1a55965..5d7f391 100644
--- a/CarRental/CarRental.csproj
+++ b/CarRental/CarRental.csproj
@@ -180,6 +180,10 @@
     <Compile Include="Migrations\202003121753440_change_ptoject_name.Designer.cs">
       <DependentUpon>202003121753440_change_ptoject_name.cs</DependentUpon>
     </Compile>
+    <Compile Include="Migrations\202003151556059_AddBrandIdCarId.cs" />
+    <Compile Include="Migrations\202003151556059_AddBrandIdCarId.Designer.cs">
+      <DependentUpon>202003151556059_AddBrandIdCarId.cs</DependentUpon>
+    </Compile>
     <Compile Include="Migrations\Configuration.cs" />
     <Compile Include="Models\AccountViewModels.cs" />
     <Compile Include="Models\ApplicationDbContext.cs" />
@@ -285,6 +289,9 @@
     <EmbeddedResource Include="Migrations\202003121753440_change_ptoject_name.resx">
       <DependentUpon>202003121753440_change_ptoject_name.cs</DependentUpon>
     </EmbeddedResource>
+    <EmbeddedResource Include="Migrations\202003151556059_AddBrandIdCarId.resx">
+      <DependentUpon>202003151556059_AddBrandIdCarId.cs</DependentUpon>
+    </EmbeddedResource>
   </ItemGroup>
   <PropertyGroup>
     <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
diff --git a/CarRental/Controllers/HomeController.cs b/CarRental/Controllers/HomeController.cs
index 4edc9c9..db2c35a 100644
--- a/CarRental/Controllers/HomeController.cs
+++ b/CarRental/Controllers/HomeController.cs
@@ -106,8 +106,8 @@ namespace CarRental.Controllers
             Car car = new Car
             {
                 Name = carViewModel.Name,
-                Type = type,
-                Brand = brand, 
+                TypeId = type.TypeId,
+                BrandId = brand.BrandID, 
                 Price = carViewModel.Price
             };
 
diff --git a/CarRental/Migrations/202003151556059_AddBrandIdCarId.Designer.cs b/CarRental/Migrations/202003151556059_AddBrandIdCarId.Designer.cs
new file mode 100644
index 0000000..9d6f1ef
--- /dev/null
+++ b/CarRental/Migrations/202003151556059_AddBrandIdCarId.Designer.cs
@@ -0,0 +1,29 @@
+// <auto-generated />
+namespace IdentityTest2.Migrations
+{
+    using System.CodeDom.Compiler;
+    using System.Data.Entity.Migrations;
+    using System.Data.Entity.Migrations.Infrastructure;
+    using System.Resources;
+    
+    [GeneratedCode("EntityFramework.Migrations", "6.2.0-61023")]
+    public sealed partial class AddBrandIdCarId : IMigrationMetadata
+    {
+        private readonly ResourceManager Resources = new ResourceManager(typeof(AddBrandIdCarId));
+        
+        string IMigrationMetadata.Id
+        {
+            get { return "202003151556059_AddBrandIdCarId"; }
+        }
+        
+        string IMigrationMetadata.Source
+        {
+            get { return null; }
+        }
+        
+        string IMigrationMetadata.Target
+        {
+            get { return Resources.GetString("Target"); }
+        }
+    }
+}
diff --git a/CarRental/Migrations/202003151556059_AddBrandIdCarId.cs b/CarRental/Migrations/202003151556059_AddBrandIdCarId.cs
new file mode 100644
index 0000000..d27176b
--- /dev/null
+++ b/CarRental/Migrations/202003151556059_AddBrandIdCarId.cs
@@ -0,0 +1,40 @@
+namespace IdentityTest2.Migrations
+{
+    using System;
+    using System.Data.Entity.Migrations;
+    
+    public partial class AddBrandIdCarId : DbMigration
+    {
+        public override void Up()
+        {
+            DropForeignKey("dbo.Cars", "Brand_BrandID", "dbo.CarBrands");
+            DropForeignKey("dbo.Cars", "Type_TypeId", "dbo.CarTypes");
+            DropIndex("dbo.Cars", new[] { "Brand_BrandID" });
+            DropIndex("dbo.Cars", new[] { "Type_TypeId" });
+            RenameColumn(table: "dbo.Cars", name: "Brand_BrandID", newName: "BrandId");
+            RenameColumn(table: "dbo.Cars", name: "Type_TypeId", newName: "TypeId");
+            AlterColumn("dbo.Cars", "BrandId", c => c.Int(nullable: false));
+            AlterColumn("dbo.Cars", "TypeId", c => c.Int(nullable: false));
+            CreateIndex("dbo.Cars", "BrandId");
+            CreateIndex("dbo.Cars", "TypeId");
+            AddForeignKey("dbo.Cars", "BrandId", "dbo.CarBrands", "BrandID", cascadeDelete: true);
+            AddForeignKey("dbo.Cars", "TypeId", "dbo.CarTypes", "TypeId", cascadeDelete: true);
+        }
+        
+        public override void Down()
+        {
+            DropForeignKey("dbo.Cars", "TypeId", "dbo.CarTypes");
+            DropForeignKey("dbo.Cars", "BrandId", "dbo.CarBrands");
+            DropIndex("dbo.Cars", new[] { "TypeId" });
+            DropIndex("dbo.Cars", new[] { "BrandId" });
+            AlterColumn("dbo.Cars", "TypeId", c => c.Int());
+            AlterColumn("dbo.Cars", "BrandId", c => c.Int());
+            RenameColumn(table: "dbo.Cars", name: "TypeId", newName: "Type_TypeId");
+            RenameColumn(table: "dbo.Cars", name: "BrandId", newName: "Brand_BrandID");
+            CreateIndex("dbo.Cars", "Type_TypeId");
+            CreateIndex("dbo.Cars", "Brand_BrandID");
+            AddForeignKey("dbo.Cars", "Type_TypeId", "dbo.CarTypes", "TypeId");
+            AddForeignKey("dbo.Cars", "Brand_BrandID", "dbo.CarBrands", "BrandID");
+        }
+    }
+}
diff --git a/CarRental/Migrations/202003151556059_AddBrandIdCarId.resx b/CarRental/Migrations/202003151556059_AddBrandIdCarId.resx
new file mode 100644
index 0000000..193aef8
--- /dev/null
+++ b/CarRental/Migrations/202003151556059_AddBrandIdCarId.resx
@@ -0,0 +1,126 @@
+ï»¿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" use="required" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <data name="Target" xml:space="preserve">
+    <value>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</value>
+  </data>
+  <data name="DefaultSchema" xml:space="preserve">
+    <value>dbo</value>
+  </data>
+</root>
\ No newline at end of file
diff --git a/CarRental/Models/Car.cs b/CarRental/Models/Car.cs
index d9015ab..1240cd3 100644
--- a/CarRental/Models/Car.cs
+++ b/CarRental/Models/Car.cs
@@ -11,7 +11,9 @@ namespace CarRental.Models
         public string Name { get; set; }
         public int Price { get; set; }
 
+        public int BrandId { get; set; }
         public virtual CarBrand Brand { get; set; }
+        public int TypeId { get; set; }
         public virtual CarType Type { get; set; }
     }
 }
\ No newline at end of file
diff --git a/CarRental/Views/Home/Index.cshtml b/CarRental/Views/Home/Index.cshtml
index 45ffc6d..3019bd3 100644
--- a/CarRental/Views/Home/Index.cshtml
+++ b/CarRental/Views/Home/Index.cshtml
@@ -5,65 +5,68 @@
     ViewBag.Title = "Cars";
 }
 
-    <div class="container">
-        <h1>Cars</h1>
-        @using (Html.BeginForm("Index", "Home", FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
-        {
+<div class="container">
+    <h1>Cars</h1>
+    @using (Html.BeginForm("Index", "Home", FormMethod.Get, new { @class = "form-inline", role = "form" }))
+    {
+        <div class="form-group mb-2">
             @Html.Label("Brand")
             @Html.DropDownList("Brand", Model.Brands as SelectList, htmlAttributes: new { @class = "form-control", id = "BrandDropdown" })
-
+        </div>
+        <div class="form-group mb-2">
             @Html.Label("Car type")
             @Html.DropDownList("Type", Model.CarTypes as SelectList, htmlAttributes: new { @class = "form-control", id = "TypeDropdown" })
-
+        </div>
+        <div class="form-group mb-2">
             @Html.Label("Sort by")
             @Html.DropDownList("SortType", Model.SortType as SelectList, htmlAttributes: new { @class = "form-control", id = "SortDropdown" })
-
-            <input type="submit" value="Filter" class="btn btn-default" />
-        }
-        <table class="table">
-            <thead>
+        </div>
+        <input type="submit" value="Filter" class="btn btn-default" />
+    }
+    <table class="table">
+        <thead>
+            <tr>
+                <th scope="col">Name</th>
+                <th scope="col">Brand</th>
+                <th scope="col">Type</th>
+                <th scope="col">Price</th>
+                @if (User.IsInRole("admin"))
+                {
+                    <th scope="col">Delete</th>
+                    <th scope="col">Edit</th>
+                }
+            </tr>
+        </thead>
+        <tbody>
+            @foreach (var car in Model.Cars)
+            {
                 <tr>
-                    <th scope="col">Name</th>
-                    <th scope="col">Brand</th>
-                    <th scope="col">Type</th>
-                    <th scope="col">Price</th>
+                    <td>@car.Name</td>
+                    <td>@car.Brand.Brand</td>
+                    <td>@car.Type.Type</td>
+                    <td>@car.Price</td>
                     @if (User.IsInRole("admin"))
                     {
-                        <th scope="col">Delete</th>
-                        <th scope="col">Edit</th>
+                        <td>@Html.ActionLink("Delete", "DeleteCarForm", new { id = car.CarId })</td>
+                        <td>@Html.ActionLink("Edit", "EditCarForm", new { id = car.CarId })</td>
                     }
                 </tr>
-            </thead>
-            <tbody>
-                @foreach (var car in Model.Cars)
-                {
-                    <tr>
-                        <td>@car.Name</td>
-                        <td>@car.Brand.Brand</td>
-                        <td>@car.Type.Type</td>
-                        <td>@car.Price</td>
-                        @if (User.IsInRole("admin"))
-                        {
-                            <td>@Html.ActionLink("Delete", "DeleteCarForm", new { id = car.CarId })</td>
-                            <td>@Html.ActionLink("Edit", "EditCarForm", new { id = car.CarId })</td>
-                        }
-                    </tr>
-                }
-            </tbody>
-        </table>
+            }
+        </tbody>
+    </table>
 
-        <div class="btn-group">
-            @Html.PageLinks(Model.PageInfo, x => Url.Action("Index", new
-            {
-                page = x,
-                Brand = Model.Brands.SelectedValue,
-                Type = Model.CarTypes.SelectedValue,
-                SortType = Model.SortType.SelectedValue
-            })
-            )
-        </div>
-        @if (User.IsInRole("admin"))
+    <div class="btn-group">
+        @Html.PageLinks(Model.PageInfo, x => Url.Action("Index", new
         {
-            @Html.ActionLink("Add new car", "AddNewCar", "Home", new { @class = "btn btn-primary" })
-        }
-    </div>
\ No newline at end of file
+            page = x,
+            Brand = Model.Brands.SelectedValue,
+            Type = Model.CarTypes.SelectedValue,
+            SortType = Model.SortType.SelectedValue
+        })
+        )
+    </div>
+    @if (User.IsInRole("admin"))
+    {
+        @Html.ActionLink("Add new car", "AddNewCar", "Home", new { @class = "btn btn-primary" })
+    }
+</div>
-- 
2.17.1.windows.2

